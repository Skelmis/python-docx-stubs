"""
This type stub file was generated by pyright.
"""

"""
Provides a general interface to a *physical* OPC package, such as a zip file.
"""
class PhysPkgReader:
    """
    Factory for physical package reader objects.
    """
    def __new__(cls, pkg_file): # -> _DirPkgReader | _ZipPkgReader:
        ...
    


class PhysPkgWriter:
    """
    Factory for physical package writer objects.
    """
    def __new__(cls, pkg_file): # -> _ZipPkgWriter:
        ...
    


class _DirPkgReader(PhysPkgReader):
    """
    Implements |PhysPkgReader| interface for an OPC package extracted into a
    directory.
    """
    def __init__(self, path) -> None:
        """
        *path* is the path to a directory containing an expanded package.
        """
        ...
    
    def blob_for(self, pack_uri): # -> bytes:
        """
        Return contents of file corresponding to *pack_uri* in package
        directory.
        """
        ...
    
    def close(self): # -> None:
        """
        Provides interface consistency with |ZipFileSystem|, but does
        nothing, a directory file system doesn't need closing.
        """
        ...
    
    @property
    def content_types_xml(self): # -> bytes:
        """
        Return the `[Content_Types].xml` blob from the package.
        """
        ...
    
    def rels_xml_for(self, source_uri): # -> bytes | None:
        """
        Return rels item XML for source with *source_uri*, or None if the
        item has no rels item.
        """
        ...
    


class _ZipPkgReader(PhysPkgReader):
    """
    Implements |PhysPkgReader| interface for a zip file OPC package.
    """
    def __init__(self, pkg_file) -> None:
        ...
    
    def blob_for(self, pack_uri): # -> bytes:
        """
        Return blob corresponding to *pack_uri*. Raises |ValueError| if no
        matching member is present in zip archive.
        """
        ...
    
    def close(self): # -> None:
        """
        Close the zip archive, releasing any resources it is using.
        """
        ...
    
    @property
    def content_types_xml(self): # -> bytes:
        """
        Return the `[Content_Types].xml` blob from the zip package.
        """
        ...
    
    def rels_xml_for(self, source_uri): # -> bytes | None:
        """
        Return rels item XML for source with *source_uri* or None if no rels
        item is present.
        """
        ...
    


class _ZipPkgWriter(PhysPkgWriter):
    """
    Implements |PhysPkgWriter| interface for a zip file OPC package.
    """
    def __init__(self, pkg_file) -> None:
        ...
    
    def close(self): # -> None:
        """
        Close the zip archive, flushing any pending physical writes and
        releasing any resources it's using.
        """
        ...
    
    def write(self, pack_uri, blob): # -> None:
        """
        Write *blob* to this zip package with the membername corresponding to
        *pack_uri*.
        """
        ...
    


