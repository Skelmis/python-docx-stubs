"""
This type stub file was generated by pyright.
"""

"""
Relationship-related objects.
"""
class Relationships(dict):
    """
    Collection object for |_Relationship| instances, having list semantics.
    """
    def __init__(self, baseURI) -> None:
        ...
    
    def add_relationship(self, reltype, target, rId, is_external=...): # -> _Relationship:
        """
        Return a newly added |_Relationship| instance.
        """
        ...
    
    def get_or_add(self, reltype, target_part): # -> _Relationship:
        """
        Return relationship of *reltype* to *target_part*, newly added if not
        already present in collection.
        """
        ...
    
    def get_or_add_ext_rel(self, reltype, target_ref):
        """
        Return rId of external relationship of *reltype* to *target_ref*,
        newly added if not already present in collection.
        """
        ...
    
    def part_with_reltype(self, reltype):
        """
        Return target part of rel with matching *reltype*, raising |KeyError|
        if not found and |ValueError| if more than one matching relationship
        is found.
        """
        ...
    
    @property
    def related_parts(self): # -> dict[Unknown, Unknown]:
        """
        dict mapping rIds to target parts for all the internal relationships
        in the collection.
        """
        ...
    
    @property
    def xml(self):
        """
        Serialize this relationship collection into XML suitable for storage
        as a .rels file in an OPC package.
        """
        ...
    


class _Relationship:
    """
    Value object for relationship to part.
    """
    def __init__(self, rId, reltype, target, baseURI, external=...) -> None:
        ...
    
    @property
    def is_external(self): # -> bool:
        ...
    
    @property
    def reltype(self): # -> Unknown:
        ...
    
    @property
    def rId(self): # -> Unknown:
        ...
    
    @property
    def target_part(self): # -> Unknown:
        ...
    
    @property
    def target_ref(self): # -> Unknown:
        ...
    


