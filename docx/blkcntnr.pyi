"""
This type stub file was generated by pyright.
"""
from docx.table import Table

from docx.text.paragraph import Paragraph

from docx.shared import Parented

"""Block item container, used by body, cell, header, etc.

Block level items are things like paragraph and table, although there are a few other
specialized ones like structured document tags.
"""
class BlockItemContainer(Parented):
    """Base class for proxy objects that can contain block items.

    These containers include _Body, _Cell, header, footer, footnote, endnote, comment,
    and text box objects. Provides the shared functionality to add a block item like
    a paragraph or table.
    """
    def __init__(self, element, parent) -> None:
        ...
    
    def add_paragraph(self, text: str=..., style: str | None=...) -> Paragraph:
        """
        Return a paragraph newly added to the end of the content in this
        container, having *text* in a single run if present, and having
        paragraph style *style*. If *style* is |None|, no paragraph style is
        applied, which has the same effect as applying the 'Normal' style.
        """
        ...
    
    def add_table(self, rows: int, cols: int, width: float | int) -> Table:
        """
        Return a table of *width* having *rows* rows and *cols* columns,
        newly appended to the content in this container. *width* is evenly
        distributed between the table columns.
        """
        ...
    
    @property
    def paragraphs(self) -> list[Paragraph]:
        """
        A list containing the paragraphs in this container, in document
        order. Read-only.
        """
        ...
    
    @property
    def tables(self) -> list[Table]:
        """
        A list containing the tables in this container, in document order.
        Read-only.
        """
        ...
    


